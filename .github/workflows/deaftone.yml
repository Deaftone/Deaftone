on: [push, pull_request]

name: Deaftone

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "deaftone"
          key: "deaftone"
          env-vars: ""
          workspaces: ""
          cache-on-failure: ""
      - name: Run cargo check
        uses: actions-rs/cargo@v1
        continue-on-error: true # WARNING: only for this example, remove it!
        with:
          command: check

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "deaftone"
          key: "deaftone"
          env-vars: ""
          workspaces: ""
          cache-on-failure: ""
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        continue-on-error: true # WARNING: only for this example, remove it!
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        continue-on-error: true # WARNING: only for this example, remove it!
        with:
          command: clippy
          args: -- -D warnings
  build:
    name: Build deaftone
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "deaftone"
          key: "deaftone"
          env-vars: ""
          workspaces: ""
          cache-on-failure: ""
      - run: cargo build --release --all-features
