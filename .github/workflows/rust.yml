name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: rustup toolchain install stable --profile minimal
    - uses: Swatinem/rust-cache@v2
      with:
        # An explicit cache key that is used instead of the automatic `job`-based
        # cache key and is thus stable across jobs.
        # Default: empty
        shared-key: ""

        # An additional cache key that is added alongside the automatic `job`-based
        # cache key and can be used to further differentiate jobs.
        # Default: empty
        key: ""

        # A whitespace separated list of env-var *prefixes* who's value contributes
        # to the environment cache key.
        # The env-vars are matched by *prefix*, so the default `RUST` var will
        # match all of `RUSTC`, `RUSTUP_*`, `RUSTFLAGS`, `RUSTDOC_*`, etc.
        # Default: "CARGO CC CFLAGS CXX CMAKE RUST"
        env-vars: ""

        # The cargo workspaces and target directory configuration.
        # These entries are separated by newlines and have the form
       # `$workspace -> $target`. The `$target` part is treated as a directory
       # relative to the `$workspace` and defaults to "target" if not explicitly given.
        # Default: ". -> target"
        workspaces: ""

        # Determines if the cache should be saved even when the workflow has failed.
        # Default: "false"
        cache-on-failure: ""
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
